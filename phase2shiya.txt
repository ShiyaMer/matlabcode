format short
clc
clear all
%input
origC=[-7.5 3 0 0 0 -1 -1 0];
ovariables={'x1','x2','x3','s1','s2','Xb'};
variables={'x1','x2','x3','s1','s2','A1','A2','Xb'};
info=[3 -1 -1 -1 0 1 0 3;
    1 -1 1 0 -1 0 1 2];
BV=[6 7];

%Phase one
cost=[0 0 0 0 0 -1 -1 0];
A=info;
StartBV=find(cost<0);

%calculate zj-cj
zjcj=cost(BV)*A-cost;
zcj=[zjcj;A];
simptable=array2table(zcj);
simptable.Properties.VariableNames(1:size(zcj,2))=variables
fprintf('Phase one start\n')
RUN=true;
while RUN
zc=zjcj(1:end-1);
if any(zc<0)
 [enterval,pvt_col]=min(zc);
         fprintf('The entering variable is %d \n',pvt_col)
         % forleaving variable
           sol=A(:,end);
         column=A(:,pvt_col);
         if column<0
             fprintf('Unbounded solution')
         else

         for i=1:size(column,1)
             if(column(i)>0)
                 ratio(i)=sol(i)./column(i);
             else
                 ratio(i)=inf;
             end
         end
         end
         [min_ratio,pvt_row]=min(ratio);
          fprintf('The leaving variable is %d \n',pvt_row)
 [min_ratio,pvt_row]=min(ratio);
          fprintf('The leaving variable is %d \n',pvt_row)

          BV(pvt_row)=pvt_col;
           disp('New basic variables BV are =')
        disp(BV)
%pivot key
pvt_key=A(pvt_row,pvt_col);
%update the table for the next iteration
A(pvt_row,:)=A(pvt_row,:)./pvt_key;
for i=1:size(A,1)
    if i~=pvt_row
A(i,:)=A(i,:)-A(i,pvt_col).*A(pvt_row,:);
    end
end
zjcj=cost(BV)*A-cost;
zcj=[zjcj;A];
simptable=array2table(zcj);
simptable.Properties.VariableNames(1:size(zcj,2))=variables
%for solution
bfs=zeros(1,size(A,2));
bfs(BV)=A(:,end);

else
    RUN=false;
    fprintf('current bfs is optimal\n')
    fprintf('Phase 1 end\n')
    bfs=BV;
end
end

fprintf('Start phase 2\n')
A(:,StartBV)=[];
origC(:,StartBV)=[];
zjcj=origC(bfs)*A-origC;
zcj=[zjcj;A];
simptable=array2table(zcj);
simptable.Properties.VariableNames(1:size(zcj,2))=ovariables
zc=zjcj(1:end-1);
RUN=true;
while RUN
    zc=zjcj(1:end-1)
if any(zc<0)
 [enterval,pvt_col]=min(zc);
         fprintf('The entering variable is %d \n',pvt_col)
         % forleaving variable
           sol=A(:,end);
         column=A(:,pvt_col);
   
         for i=1:size(column,1)
             if(column(i)>0)
                 ratio(i)=sol(i)./column(i);
             else
                 ratio(i)=inf;
             end
         end
         [min_ratio,pvt_row]=min(ratio);
          fprintf('The leaving variable is %d \n',pvt_row)
 [min_ratio,pvt_row]=min(ratio);
          fprintf('The leaving variable is %d \n',pvt_row)

          BV(pvt_row)=pvt_col;
           disp('New basic variables BV are =')
        disp(BV)
%pivot key
pvt_key=A(pvt_row,pvt_col);
%update the table for the next iteration
A(pvt_row,:)=A(pvt_row,:)./pvt_key;
for i=1:size(A,1)
    if i~=pvt_row
A(i,:)=A(i,:)-A(i,pvt_col).*A(pvt_row,:);
    end
end
zjcj=origC(bfs)*A-origC;
zcj=[zjcj;A];
simptable=array2table(zcj);
simptable.Properties.VariableNames(1:size(zcj,2))=ovariables


else
    RUN=false;
    fprintf('current bfs is optimal\n')
    fprintf('Phase 2 end')
    bfs2=zeros(1,size(A,2));
bfs2(bfs)=A(:,end);
bfs2(end)=sum(bfs2.*origC);
current_bfs=array2table(bfs2);
current_bfs.Properties.VariableNames(1:size(current_bfs,2))=ovariables
    
end
end
